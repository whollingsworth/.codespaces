#!/bin/sh

CODESPACES_HOME="/workspaces/.codespaces/.persistedshare/dotfiles"
MONOREPO_HOME="/workspaces/monorama"

####################
# RESTORE DOTFILES #
####################

DOTFILES_HOME="${HOME}/.dotfiles"
OH_MY_ZSH_CUSTOM="${HOME}/.config/zsh/.oh-my-zsh/custom/"

git clone https://github.com/wthollingsworth/.dotfiles.git "${DOTFILES_HOME}" &>/dev/null

# Install dotfiles with stow
sudo apt install stow
for dir in "${DOTFILES_HOME}"/*; do
  stow --dir="${DOTFILES_HOME}" --target="${HOME}" "$(basename "${dir}")"
done

# Restore zsh configuration that doesn't live in ${DOTFILES_HOME}
cat <<-EOF >"${HOME}/.zshenv"
	if [[ -z "\${XDG_CONFIG_HOME}" ]]
	then
		export XDG_CONFIG_HOME="\${HOME}/.config"
	fi

	if [[ -d "\${XDG_CONFIG_HOME}/zsh" ]]
	then
		export ZDOTDIR="\${XDG_CONFIG_HOME}/zsh"
	fi

	export PANORAMA_TOP="/workspaces"
EOF

cat <<-EOF >>"${HOME}/.zprofile"
	# Set GIT_EDITOR to use Windsurf IDE when running inside Windsurf
	if [[ -n "$VSCODE_GIT_ASKPASS_NODE" && "$VSCODE_GIT_ASKPASS_NODE" == *".windsurf-server"* ]]; then
		# Using the integrated terminal in Windsurf
		export GIT_EDITOR="windsurf --wait"	# Assumes the 'windsurf' command exists
	fi
EOF

ZSH="${HOME}/.config/zsh/.oh-my-zsh" /bin/sh -c "$(curl --fail --silent --show-error --location https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "${OH_MY_ZSH_CUSTOM}/plugins/zsh-syntax-highlighting" &>/dev/null
git clone https://github.com/moarram/headline.git "${OH_MY_ZSH_CUSTOM}/themes/headline" &>/dev/null
ln --symbolic "${OH_MY_ZSH_CUSTOM}/themes/headline/headline.zsh-theme" "${OH_MY_ZSH_CUSTOM}/themes/headline.zsh-theme"

####################
# INSTALL SOFTWARE #
####################

BREW_COMMAND="/home/linuxbrew/.linuxbrew/bin/brew" # `brew` is not in path since `.zshrc` is not sourced
BREWFILE_PATH="${CODESPACES_HOME}/Brewfile"        # ${HOMEBREW_BUNDLE_FILE} is not exported since `.zshrc` is not sourced

# Homebrew
/bin/bash -c "$(curl --fail --silent --show-error --location https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
${BREW_COMMAND} bundle install --file="${BREWFILE_PATH}"

# Language Support
# TODO: Maybe it would be better to do all of this in a post install script?
# The gems _might_ not be getting installed, and pan-set-up-overcommit feels
# out of place here.
bundle config set without container_only
gem install ruby-lsp ruby-lsp-rails panolint-rails

cat <<-EOF >"${MONOREPO_HOME}/.git/info/exclude"
  apps/*/.nvimrc
  apps/*/.nvim.lua
  apps/*/.exrc
  apps/*/.lazy.lua
EOF
# pan-set-up-overcommit
cp "${CODESPACES_HOME}/codespaces.lazy.lua" "${MONOREPO_HOME}/apps/rainbow-backend/.lazy.lua"
cp "${CODESPACES_HOME}/codespaces.lazy.lua" "${MONOREPO_HOME}/apps/nds/.lazy.lua"

##########################
# WINDSURF CONFIGURATION #
##########################

WINDSURF_HOME="/home/codespace/.windsurf-server/data"
mkdir --parents "${WINDSURF_HOME}/Machine" # Create the directory if it doesn't exist

# Symlink the Windsurf remote settings
for file in "${CODESPACES_HOME}/windsurf/Machine/"*; do
  if [[ -f "$file" && "$(basename "$file")" != "." && "$(basename "$file")" != ".." ]]; then
    ln -sf "$file" "${WINDSURF_HOME}/Machine/$(basename "$file")"
  fi
done

#################
# SET THE SHELL #
#################

sudo chsh --shell "/usr/bin/zsh" "$(whoami)"
cp "${CODESPACES_HOME}/.zshrc.codespaces" "${HOME}/.config/zsh/.zshrc.local" # Panorama shell includes
